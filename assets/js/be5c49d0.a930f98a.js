"use strict";(self.webpackChunkeverscale_docs_website=self.webpackChunkeverscale_docs_website||[]).push([[742],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),l=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(r),m=n,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return r?o.createElement(f,a(a({ref:t},u),{},{components:r})):o.createElement(f,a({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5240:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var o=r(3117),n=r(102),i=(r(7294),r(3905)),a=["components"],c={sidebar_position:4},s="DeBot Consortium",l={unversionedId:"concept/everscale-overview/decentralization/debot-consortium",id:"concept/everscale-overview/decentralization/debot-consortium",title:"DeBot Consortium",description:"DeBot-IS-consortium",source:"@site/../../src/concept/everscale-overview/decentralization/debot-consortium.md",sourceDirName:"concept/everscale-overview/decentralization",slug:"/concept/everscale-overview/decentralization/debot-consortium",permalink:"/concept/everscale-overview/decentralization/debot-consortium",draft:!1,editUrl:"https://github.com/everscale-org/docs/edit/main/.build/website/../../src/concept/everscale-overview/decentralization/debot-consortium.md",tags:[],version:"current",lastUpdatedAt:1665506843,formattedLastUpdatedAt:"Oct 11, 2022",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"DeBot Specifications",permalink:"/concept/everscale-overview/decentralization/debot-specifications"},next:{title:"Terminology",permalink:"/concept/everscale-overview/terminology"}},u={},p=[{value:"DeBot-IS-consortium",id:"debot-is-consortium",level:2},{value:"Application Rules:",id:"application-rules",level:3},{value:"Interface submission proccess:",id:"interface-submission-proccess",level:3},{value:"Supported browsers:",id:"supported-browsers",level:3}],d={toc:p};function m(e){var t=e.components,r=(0,n.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"debot-consortium"},"DeBot Consortium"),(0,i.kt)("h2",{id:"debot-is-consortium"},"DeBot-IS-consortium"),(0,i.kt)("p",null,"DeBot Interface Specifications (IS) Consortium. IS a place where community defines interfaces every DeBot browser should support."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/tonlabs/DeBot-IS-consortium"},"DeBot-IS-consortium repository"))),(0,i.kt)("h3",{id:"application-rules"},"Application Rules:"),(0,i.kt)("p",null,'Each new interface must create a folder, which has a readme.md desciption of an interface, example of its implementaion in both Solidity and C++ placed in an "examples" sub folder.'),(0,i.kt)("h3",{id:"interface-submission-proccess"},"Interface submission proccess:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You should create a specifications proposal, discuss it."),(0,i.kt)("li",{parentName:"ul"},"After the discussion is over and proposal is accepted you should submit examples in both Solidity and C++."),(0,i.kt)("li",{parentName:"ul"},"Only proposals with examples will be published.")),(0,i.kt)("h3",{id:"supported-browsers"},"Supported browsers:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If you implemented a DeBot browser we will be happy to list it. Please let us know."),(0,i.kt)("li",{parentName:"ul"},"Your browser should clearly state interfaces which it supports (by version number as stated in repository).")))}m.isMDXComponent=!0}}]);