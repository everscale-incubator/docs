"use strict";(self.webpackChunkeverscale_docs_website=self.webpackChunkeverscale_docs_website||[]).push([[734],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(r),v=a,h=p["".concat(s,".").concat(v)]||p[v]||d[v]||o;return r?n.createElement(h,l(l({ref:t},u),{},{components:r})):n.createElement(h,l({ref:t},u))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=v;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},8767:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:5,description:"Learn playground, documentation, make your first request and integrate"},l="GraphQL API Quick Start",i={unversionedId:"develop/tutorial/graphql-api-start",id:"develop/tutorial/graphql-api-start",title:"GraphQL API Quick Start",description:"Learn playground, documentation, make your first request and integrate",source:"@site/../../src/develop/tutorial/graphql-api-start.md",sourceDirName:"develop/tutorial",slug:"/develop/tutorial/graphql-api-start",permalink:"/docs/PR-308/develop/tutorial/graphql-api-start",draft:!1,editUrl:"https://github.com/everscale-org/docs/edit/main/.build/website/../../src/develop/tutorial/graphql-api-start.md",tags:[],version:"current",lastUpdatedAt:1670934809,formattedLastUpdatedAt:"Dec 13, 2022",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Learn playground, documentation, make your first request and integrate"},sidebar:"tutorialSidebar",previous:{title:"EVER SDK Guides",permalink:"/docs/PR-308/develop/tutorial/ever-sdk-guides"},next:{title:"Get Started with Evercloud",permalink:"/docs/PR-308/develop/tutorial/evercloud-start"}},s={},c=[{value:"Playground",id:"playground",level:2},{value:"Documentation",id:"documentation",level:2},{value:"Request with curl",id:"request-with-curl",level:2},{value:"Request with SDK (JavaScript)",id:"request-with-sdk-javascript",level:2},{value:"Full docs",id:"full-docs",level:2}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"graphql-api-quick-start"},"GraphQL API Quick Start"),(0,a.kt)("p",null,"Let's start with observing API in sandbox playground."),(0,a.kt)("p",null,"Learn how to read API documentation."),(0,a.kt)("p",null,"Then move to making an api request with curl."),(0,a.kt)("p",null,"And integrate it with ever-sdk."),(0,a.kt)("h2",{id:"playground"},"Playground"),(0,a.kt)("p",null,"Go to GraphQL playground ",(0,a.kt)("a",{parentName:"p",href:"https://devnet-sandbox.evercloud.dev/graphql"},"https://devnet-sandbox.evercloud.dev/graphql")),(0,a.kt)("p",null,"Insert this query in the left part."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},'query{\nblockchain{\n    account(address:"-1:3333333333333333333333333333333333333333333333333333333333333333"){\n      info{\n        balance(format:DEC)\n        address\n      }\n    }\n  }\n}\n')),(0,a.kt)("p",null,"Now click play button and you will see the result:"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://github.com/tonlabs/ever-platform-docs/raw/main/.gitbook/assets/image.png",alt:null})),(0,a.kt)("h2",{id:"documentation"},"Documentation"),(0,a.kt)("p",null,'Click on the button "schema" on the right. You will see the API documentation with all available fields. Try to make your own query now.'),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://github.com/tonlabs/ever-platform-docs/raw/main/.gitbook/assets/image%20(1).png",alt:null})),(0,a.kt)("h2",{id:"request-with-curl"},"Request with curl"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'curl --location --request POST \'https://devnet-sandbox.evercloud.dev/graphql\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{"query":"query($address: String!){\\n  blockchain{\\n    account(address:$address){\\n      info{\\n        balance(format:DEC)\\n      }\\n    }\\n  }\\n}","variables":{"address":"0:3333333333333333333333333333333333333333333333333333333333333333"}}\'\n')),(0,a.kt)("h2",{id:"request-with-sdk-javascript"},"Request with SDK (JavaScript)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const {TonClient} = require("@eversdk/core");\nconst {libNode} = require("@eversdk/lib-node");\n\nTonClient.useBinaryLibrary(libNode)\n\nconst client = new TonClient({\n    network: {\n        endpoints: [\n            "https://devnet-sandbox.evercloud.dev/graphql"\n        ],\n    },\n});\n\n(async () => {\n    try {\n        // Get account balance. \n        const query = `\n            query {\n              blockchain {\n                account(\n                  address: "${address}"\n                ) {\n                   info {\n                    balance(format: DEC)\n                  }\n                }\n              }\n            }`\n        const {result}  = await client.net.query({query})\n        console.log(`The account balance is ${result.data.blockchain.account.info.balance}`);\n        client.close();\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\n)()\n')),(0,a.kt)("h2",{id:"full-docs"},"Full docs"),(0,a.kt)("p",null,"See original guide at ",(0,a.kt)("a",{parentName:"p",href:"https://docs.everos.dev/ever-platform/reference/graphql-api/quick-start"},"https://docs.everos.dev/ever-platform/reference/graphql-api/quick-start")),(0,a.kt)("p",null,"Full GraphQL API documenation is available at ",(0,a.kt)("a",{parentName:"p",href:"https://docs.everos.dev/ever-platform/reference/graphql-api"},"https://docs.everos.dev/ever-platform/reference/graphql-api")))}p.isMDXComponent=!0}}]);