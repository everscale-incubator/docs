"use strict";(self.webpackChunkeverscale_docs_website=self.webpackChunkeverscale_docs_website||[]).push([[1329],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>k});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),i=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=i(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=i(t),h=o,k=u["".concat(c,".").concat(h)]||u[h]||d[h]||a;return t?r.createElement(k,l(l({ref:n},p),{},{components:t})):r.createElement(k,l({ref:n},p))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=h;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[u]="string"==typeof e?e:o,l[1]=s;for(var i=2;i<a;i++)l[i]=t[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},2481:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:6,description:"Create Evercloud project and start your communication with blockchain"},l="Get Started with Evercloud",s={unversionedId:"develop/tutorial/evercloud-start",id:"develop/tutorial/evercloud-start",title:"Get Started with Evercloud",description:"Create Evercloud project and start your communication with blockchain",source:"@site/../../src/develop/tutorial/evercloud-start.md",sourceDirName:"develop/tutorial",slug:"/develop/tutorial/evercloud-start",permalink:"/docs/PR-308/develop/tutorial/evercloud-start",draft:!1,editUrl:"https://github.com/everscale-org/docs/edit/main/.build/website/../../src/develop/tutorial/evercloud-start.md",tags:[],version:"current",lastUpdatedAt:1670934809,formattedLastUpdatedAt:"Dec 13, 2022",sidebarPosition:6,frontMatter:{sidebar_position:6,description:"Create Evercloud project and start your communication with blockchain"},sidebar:"tutorialSidebar",previous:{title:"GraphQL API Quick Start",permalink:"/docs/PR-308/develop/tutorial/graphql-api-start"},next:{title:"Smart Digital Assets",permalink:"/docs/PR-308/develop/tutorial/smart-digital-assets"}},c={},i=[{value:"Registration",id:"registration",level:2},{value:"Create a Project",id:"create-a-project",level:2},{value:"Configure security",id:"configure-security",level:2},{value:"Explore Playground",id:"explore-playground",level:2},{value:"Connect to Evercloud",id:"connect-to-evercloud",level:2},{value:"HTTPS",id:"https",level:3},{value:"Without secret",id:"without-secret",level:4},{value:"With secret",id:"with-secret",level:4},{value:"WSS",id:"wss",level:3},{value:"Without secret",id:"without-secret-1",level:4},{value:"API Documentation",id:"api-documentation",level:2},{value:"Reference",id:"reference",level:4},{value:"Samples",id:"samples",level:4},{value:"Full docs",id:"full-docs",level:2}],p={toc:i};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"get-started-with-evercloud"},"Get Started with Evercloud"),(0,o.kt)("h2",{id:"registration"},"Registration"),(0,o.kt)("p",null,"Go to ",(0,o.kt)("a",{parentName:"p",href:"https://dashboard.evercloud.dev/"},"https://dashboard.evercloud.dev/"),' and click "Register now!". Verify your e-mail and you will be taken to the dashboard.'),(0,o.kt)("h2",{id:"create-a-project"},"Create a Project"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},'Click "Create Project" and enter the name of your project')),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/tonlabs/ever-platform-docs/raw/main/.gitbook/assets/image%20(22).png",alt:null})),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},'Click "Add project". You will see your project endpoints, analytics, security information and project settings:')),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/tonlabs/ever-platform-docs/raw/main/.gitbook/assets/image%20(16).png",alt:null})),(0,o.kt)("h2",{id:"configure-security"},"Configure security"),(0,o.kt)("p",null,"This is optional if you want to protect your endpoint with Basic Auth authorization."),(0,o.kt)("p",null,"Do not share your secret with anyone and store it safely."),(0,o.kt)("p",null,'Go to the "Security" tab and click toggle "Secret required"'),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/tonlabs/ever-platform-docs/raw/main/.gitbook/assets/image%20(13).png",alt:null})),(0,o.kt)("p",null,'You will see your secret appear in the "Summary" tab'),(0,o.kt)("h2",{id:"explore-playground"},"Explore Playground"),(0,o.kt)("p",null,"Click on the circle with arrow next to the endpoint to open GraphQL playground."),(0,o.kt)("p",null,"In the playground you can make queries and explore Graphql Schema."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"First, you need to add your projectID to the url inside the playground to access it.")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},'If you enabled "Secret required" option, then you need specify Basic Auth creds in the headers! You will find them on "Security" tab in Evercloud Dashboard.')),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/tonlabs/ever-platform-docs/raw/main/.gitbook/assets/image%20(7)%20(1).png",alt:null})),(0,o.kt)("p",null,"Now lets execute this query to get the hash of the last masterchain block!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"query{\n  blockchain{\n    blocks(last:1){\n      edges{\n        node{\n          id\n        }\n      }\n     }\n  }\n}\n")),(0,o.kt)("p",null,"See the result"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/tonlabs/ever-platform-docs/raw/main/.gitbook/assets/image%20(12).png",alt:null})),(0,o.kt)("h2",{id:"connect-to-evercloud"},"Connect to Evercloud"),(0,o.kt)("h3",{id:"https"},"HTTPS"),(0,o.kt)("h4",{id:"without-secret"},"Without secret"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Curl")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl --location --request POST \'https://mainnet.evercloud.dev/your-project-id/graphql\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{"query":"query($address: String!){\\n  blockchain{\\n    account(address:$address){\\n      info{\\n        balance(format:DEC)\\n      }\\n    }\\n  }\\n}","variables":{"address":"0:e17ac4e77f46626579c7c4fefe35286117384c5ccfc8745c9780cdf056c378bf"}}\'\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"ever-sdk-js")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const {TonClient} = require("@eversdk/core");\nconst {libNode} = require("@eversdk/lib-node");\n\nTonClient.useBinaryLibrary(libNode)\n\nconst client = new TonClient({\n    network: {\n        endpoints: [\n            "mainnet.evercloud.dev/your-project-id/graphql"\n        ],\n    },\n});\n\n(async () => {\n    try {\n        queryString = `\n            query{\n                blockchain{\n                blocks(workchain:-1, last:1){\n                    edges{\n                    node{\n                        hash\n                        seq_no\n                    }\n                    }\n                }\n                }\n            }\n        `\n        let {seq_no, hash} = (await client.net.query({ \n            "query": queryString }))\n        .result.data.blockchain.blocks.edges[0].node;\n        console.log("The last masterchain block seqNo is " + seq_no+ \'\\n\' + "the hash is" + hash);\n        client.close();\n}\n    catch (error) {\n            console.error(error);\n    }\n}\n)()\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"everdev")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'everdev network credentials main --project "your-project-id"\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"tonos-cli")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'tonos-cli config --url "mainnet.evercloud.dev" --project_id "your-project-id"\nSucceeded.\n{\n  "url": "mainnet.evercloud.dev",\n  "wc": 0,\n  "addr": null,\n  "method": null,\n  "parameters": null,\n  "wallet": null,\n  "pubkey": null,\n  "abi_path": null,\n  "keys_path": null,\n  "retries": 5,\n  "timeout": 60000,\n  "message_processing_timeout": 40000,\n  "out_of_sync_threshold": 15,\n  "is_json": false,\n  "depool_fee": 0.5,\n  "lifetime": 60,\n  "no_answer": true,\n  "balance_in_tons": false,\n  "local_run": false,\n  "async_call": false,\n  "debug_fail": "None",\n  "project_id": "your-project-id",\n  "access_key": null,\n  "endpoints": []\n}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"JS fetch")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'var myHeaders = new Headers();\nmyHeaders.append("Content-Type", "application/json");\n\nvar graphql = JSON.stringify({\n  query: "query{\\n  blockchain{\\n    blocks(workchain:-1, last:1){\\n      edges{\\n        node{\\n          hash\\n          seq_no\\n        }\\n      }\\n    }\\n  }\\n}",\n  variables: {}\n})\nvar requestOptions = {\n  method: \'POST\',\n  headers: myHeaders,\n  body: graphql,\n  redirect: \'follow\'\n};\n\nfetch("https://mainnet.evercloud.dev/your-project-id/graphql", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log(\'error\', error));\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Postman")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"URL: https://mainnet.evercloud.dev/your-project-id/graphql\nBody: GraphQL\nQuery:\n\nquery{\n  blockchain{\n    blocks(workchain:-1, last:1){\n      edges{\n        node{\n          hash\n          seq_no\n        }\n      }\n    }\n  }\n}\n")),(0,o.kt)("h4",{id:"with-secret"},"With secret"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Curl")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl --location --request POST 'https://mainnet.evercloud.dev/your-project-id/graphql' \\\n--header 'Authorization: Basic project_secret_in_base64' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\"query\":\"query{\\n  blockchain{\\n    blocks(workchain:-1, last:1){\\n      edges{\\n        node{\\n          hash\\n          seq_no\\n        }\\n      }\\n    }\\n  }\\n}\",\"variables\":{}}'\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"ever-sdk-js")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const {TonClient} = require("@eversdk/core");\nconst {libNode} = require("@eversdk/lib-node");\n\nTonClient.useBinaryLibrary(libNode)\n\nconst client = new TonClient({\n    network: {\n        endpoints: [\n            "mainnet.evercloud.dev/your-project-id/graphql"\n        ],\n        access_key: "Project\'s secret"\n    },\n});\n\n(async () => {\n    try {\n        queryString = `\n            query{\n                blockchain{\n                blocks(workchain:-1, last:1){\n                    edges{\n                    node{\n                        hash\n                        seq_no\n                    }\n                    }\n                }\n                }\n            }\n        `\n        let {seq_no, hash} = (await client.net.query({ \n            "query": queryString }))\n        .result.data.blockchain.blocks.edges[0].node;\n        console.log("The last masterchain block seqNo is " + seq_no+ \'\\n\' + "the hash is" + hash);\n        client.close();\n}\n    catch (error) {\n            console.error(error);\n    }\n}\n)()\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"everdev")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'everdev network credentials main --project "Project Id" --access-key "Project secret"\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"tonos-cli")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'tonos-cli config --url "mainnet.evercloud.dev" --project_id "your-project-id id" --access_key "Project secret"\nSucceeded.\n{\n  "url": "mainnet.evercloud.dev",\n  "wc": 0,\n  "addr": null,\n  "method": null,\n  "parameters": null,\n  "wallet": null,\n  "pubkey": null,\n  "abi_path": null,\n  "keys_path": null,\n  "retries": 5,\n  "timeout": 60000,\n  "message_processing_timeout": 40000,\n  "out_of_sync_threshold": 15,\n  "is_json": false,\n  "depool_fee": 0.5,\n  "lifetime": 60,\n  "no_answer": true,\n  "balance_in_tons": false,\n  "local_run": false,\n  "async_call": false,\n  "debug_fail": "None",\n  "project_id": "your-project-id",\n  "access_key": "project-secret",\n  "endpoints": []\n}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"JS fetch")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'var myHeaders = new Headers();\nmyHeaders.append("Content-Type", "application/json");\n\nvar graphql = JSON.stringify({\n  query: "query{\\n  blockchain{\\n    blocks(workchain:-1, last:1){\\n      edges{\\n        node{\\n          hash\\n          seq_no\\n        }\\n      }\\n    }\\n  }\\n}",\n  variables: {}\n})\nvar requestOptions = {\n  method: \'POST\',\n  headers: myHeaders,\n  body: graphql,\n  redirect: \'follow\'\n};\n\nfetch("https://mainnet.evercloud.dev/your-project-id/graphql", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log(\'error\', error));\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Postman")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"URL: https://mainnet.evercloud.dev/your-project-id/graphql\nAuthorization: Basic Auth\nUsername: empty\nPassword: <Project secret>\nBody: GraphQL\nQuery:\n\nquery{\n  blockchain{\n    blocks(workchain:-1, last:1){\n      edges{\n        node{\n          hash\n          seq_no\n        }\n      }\n    }\n  }\n}\n")),(0,o.kt)("h3",{id:"wss"},"WSS"),(0,o.kt)("h4",{id:"without-secret-1"},"Without secret"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"ever-sdk-js")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const {TonClient} = require("@eversdk/core");\nconst {libNode} = require("@eversdk/lib-node");\n\nTonClient.useBinaryLibrary(libNode)\n\nconst client = new TonClient({\n    network: {\n        endpoints: [\n            "mainnet.evercloud.dev/your-project-id/graphql"\n        ],\n        queries_protocol: WS\n    },\n});\n\n(async () => {\n    try {\n        queryString = `\n            query{\n                blockchain{\n                blocks(workchain:-1, last:1){\n                    edges{\n                    node{\n                        hash\n                        seq_no\n                    }\n                    }\n                }\n                }\n            }\n        `\n        let {seq_no, hash} = (await client.net.query({ \n            "query": queryString }))\n        .result.data.blockchain.blocks.edges[0].node;\n        console.log("The last masterchain block seqNo is " + seq_no+ \'\\n\' + "the hash is" + hash);\n        client.close();\n}\n    catch (error) {\n            console.error(error);\n    }\n}\n)()\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"wscat")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'wscat -c wss://mainnet.evercloud.dev/your-project-id/graphql -s graphql-ws\n{"id":"1","type":"start","payload":{"variables":{},"extensions":{},"operationName":null,"query":"subscription{\\n  blocks(filter:{\\n    workchain_id:{\\n      eq:-1\\n    }\\n  }){\\n    seq_no\\n    id\\n  }\\n}"}}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Postman")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'URL: wss://mainnet.evercloud.dev/your-project-id/graphql \nSec-WebSocket-Protocol: graphql-ws\n\nmessage\n{\n  "id": "1",\n  "type": "start",\n  "payload": {\n    "variables": {},\n    "extensions": {},\n    "operationName": null,\n    "query": "subscription{\\n  blocks(filter:{\\n    workchain_id:{\\n      eq:-1\\n    }\\n  }){\\n    seq_no\\n    id\\n  }\\n}"\n  }\n}\n')),(0,o.kt)("h2",{id:"api-documentation"},"API Documentation"),(0,o.kt)("h4",{id:"reference"},"Reference"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.everos.dev/ever-platform/reference/graphql-api"},"https://docs.everos.dev/ever-platform/reference/graphql-api")),(0,o.kt)("h4",{id:"samples"},"Samples"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.everos.dev/ever-platform/samples/graphql-samples"},"https://docs.everos.dev/ever-platform/samples/graphql-samples")),(0,o.kt)("h2",{id:"full-docs"},"Full docs"),(0,o.kt)("p",null,"See original guide at ",(0,o.kt)("a",{parentName:"p",href:"https://docs.everos.dev/ever-platform/products/evercloud/get-started"},"https://docs.everos.dev/ever-platform/products/evercloud/get-started")),(0,o.kt)("p",null,"Full Evercloud documenation is available at ",(0,o.kt)("a",{parentName:"p",href:"https://docs.everos.dev/ever-platform/products/evercloud"},"https://docs.everos.dev/ever-platform/products/evercloud")))}u.isMDXComponent=!0}}]);